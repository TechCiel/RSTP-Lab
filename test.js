"use strict";

let code = new URLSearchParams(location.search).get('converted')
if(code) {
    eval(code)
    exit()
}

let b1 = new Bridge(18, 'b1', new MAC(1))
let b2 = new Bridge(18, 'b2', new MAC(2))
let b3 = new Bridge(18, 'b3', new MAC(3))
let b4 = new Bridge(18, 'b4', new MAC(4))
let b5 = new Bridge(18, 'b5', new MAC(5))
let b6 = new Bridge(18, 'b6', new MAC(6))
let b7 = new Bridge(18, 'b7', new MAC(7))
let b8 = new Bridge(18, 'b8', new MAC(8))
let b9 = new Bridge(18, 'b9', new MAC(9))
let b10 = new Bridge(18, 'b10', new MAC(10))
let b11 = new Bridge(18, 'b11', new MAC(11))
let h12 = new Hub(18, 'h12')
let h13 = new Hub(18, 'h13')
let h14 = new Hub(18, 'h14')
let h15 = new Hub(18, 'h15')
let h16 = new Hub(18, 'h16')
let h17 = new Hub(18, 'h17')
let h18 = new Hub(18, 'h18')
let e1 = new Edge('e1')
let e2 = new Edge('e2')
let e3 = new Edge('e3')
let e4 = new Edge('e4')
let e5 = new Edge('e5')
let e6 = new Edge('e6')
let e7 = new Edge('e7')
let e8 = new Edge('e8')
let e9 = new Edge('e9')
let e10 = new Edge('e10')
let e11 = new Edge('e11')

connect(b1.ports[1], e1.port)
connect(b2.ports[2], e2.port)
connect(b3.ports[3], e3.port)
connect(b4.ports[4], e4.port)
connect(b5.ports[5], e5.port)
connect(b6.ports[6], e6.port)
connect(b7.ports[7], e7.port)
connect(b8.ports[8], e8.port)
connect(b9.ports[9], e9.port)
connect(b10.ports[10], e10.port)
connect(b11.ports[11], e11.port)
connect(b10.ports[17], h17.ports[10])
connect(b6.ports[12], h12.ports[6])
connect(b2.ports[9], b9.ports[2])
connect(b3.ports[13], h13.ports[3])
connect(b1.ports[12], h12.ports[1])
connect(b8.ports[10], b10.ports[8])
connect(b7.ports[0], h18.ports[7])
connect(b11.ports[0], h18.ports[11])
connect(b2.ports[15], h15.ports[2])
connect(b4.ports[13], h13.ports[4])
connect(b4.ports[7], b7.ports[4])
connect(b10.ports[0], h18.ports[10])
connect(b4.ports[15], h15.ports[4])
connect(b4.ports[17], h17.ports[4])
connect(b1.ports[13], h13.ports[1])
connect(b9.ports[16], h16.ports[9])
connect(b1.ports[6], b6.ports[1])
connect(b7.ports[13], h13.ports[7])
connect(b7.ports[14], h14.ports[7])
connect(b8.ports[11], b11.ports[8])
connect(b10.ports[16], h16.ports[10])
connect(b5.ports[16], h16.ports[5])
connect(b5.ports[17], h17.ports[5])
connect(b3.ports[11], b11.ports[3])
connect(b8.ports[16], h16.ports[8])
connect(b11.ports[14], h14.ports[11])
connect(b7.ports[17], h17.ports[7])
connect(b5.ports[15], h15.ports[5])
connect(b3.ports[14], h14.ports[3])
connect(b8.ports[0], h18.ports[8])
connect(b5.ports[9], b9.ports[5])
connect(b9.ports[15], h15.ports[9])
connect(b2.ports[12], h12.ports[2])
connect(b2.ports[6], b6.ports[2])
connect(b8.ports[9], b9.ports[8])
connect(b4.ports[12], h12.ports[4])


/*
let b1 = new Bridge(8, 'b1', new MAC(1))
let b2 = new Bridge(8, 'b2', new MAC(2))
let b3 = new Bridge(8, 'b3', new MAC(3))
let b8 = new Bridge(8, 'b8', new MAC(8))
let h4 = new Hub(8, 'h4')
let h5 = new Hub(8, 'h5')
let h6 = new Hub(8, 'h6')
let h7 = new Hub(8, 'h7')
let e1 = new Edge('e1')
let e2 = new Edge('e2')
let e3 = new Edge('e3')
let e4 = new Edge('e4')
let e5 = new Edge('e5')
let e6 = new Edge('e6')
let e7 = new Edge('e7')
let e8 = new Edge('e8')
connect(b1.ports[1], e1.port)
connect(b2.ports[2], e2.port)
connect(b3.ports[3], e3.port)
connect(h4.ports[4], e4.port)
connect(h5.ports[5], e5.port)
connect(h6.ports[6], e6.port)
connect(h7.ports[7], e7.port)
connect(b8.ports[0], e8.port)
connect(b1.ports[4], h4.ports[1])
connect(b1.ports[5], h5.ports[1])
connect(b1.ports[6], h6.ports[1])
connect(b2.ports[4], h4.ports[2])
connect(b2.ports[5], h5.ports[2])
connect(b2.ports[7], h7.ports[2])
connect(b3.ports[5], h5.ports[3])
connect(b3.ports[6], h6.ports[3])
connect(b3.ports[7], h7.ports[3])
connect(b8.ports[4], h4.ports[0])
*/


graph.data(graph.save())
graph.render()

console.log('finish')
